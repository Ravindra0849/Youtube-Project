stages:
- npm
- sonar
- trivy
- docker
- image scan
- deploy

install dependency:
  stage: npm
  image:
    name: node:16
  script:
  - npm install

sonarqube-check:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
    - .sonar/cache
  script:
  - sonar-scanner
  allow_failure: true
  only:
  - master

Trivy scanner:
  stage: trivy
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
  - trivy fs .

Docker Build and Push:
  stage: docker
  image:
    name: docker:latest
  services:
  - docker:dind
  script:
  - docker build --build-arg REACT_APP_RAPID_API_KEY=9b0ab58964msh154f05eb8c1f38dp1ac6eajsn8cfd4e5f83fe -t youtube .
  - docker tag youtube $DOCKER_USERNAME/youtube:latest
  - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  - docker push $DOCKER_USERNAME/youtube:latest

Image Scanner:
  stage: image scan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
  - trivy image $DOCKER_USERNAME/youtube:latest

Deploy the container:
  stage: deploy
  tags:
  - youtube
  script:
  - docker run --name youtube -d -p 3000:3000 $DOCKER_USERNAME/youtube:latest
